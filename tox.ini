[tox]
requires = 
    tox>=4
envlist =
    lint
    {py39,py310,py311}-test
    combine-test-reports
isolated_build = True


[testenv:lint]
description = Run static checkers.
basepython = py39
; skip_install = true
extras = lint
commands =
    ruff format . --check
    ruff check .
    mypy .
    # Check formatting
    # Lint code and docstrings
    # Check type hinting


[testenv:{py39,py310,py311}-test]
description = Run doc tests and unit tests.
package = wheel
extras = test
setenv =
    PY_IGNORE_IMPORTMISMATCH=1 # https://github.com/pytest-dev/pytest/issues/2042
    COVERAGE_FILE = reports{/}.coverage.{envname}
commands =
    # Run tests and doctests from .py files
    pytest --junitxml=reports/pytest.xml.{envname} {posargs}


[testenv:combine-test-reports]
description = Combine test and coverage data from multiple test runs.
skip_install = true
setenv =
    COVERAGE_FILE = reports/.coverage
depends = {py39,py310,py311}-test
deps =
    junitparser
    coverage[toml]
commands =
    junitparser merge --glob reports/pytest.xml.* reports/pytest.xml
    coverage combine --keep
    coverage html


[testenv:docs]
description = Test and build the docs.
extras = docs
commands = sphinx-build -b html -d "docs/build/doctrees" "docs" "docs/build/html"


[testenv:build]
description = Build the package.
extras = build
commands =
